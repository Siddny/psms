# -*- coding: utf-8 -*-
# Generated by Django 1.11 on 2018-07-05 10:18
from __future__ import unicode_literals

from django.conf import settings
import django.contrib.auth.models
import django.contrib.auth.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0008_alter_user_username_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=30, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=30, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name_plural': 'users',
                'verbose_name': 'user',
                'abstract': False,
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='AssignTools',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('condition_ontake', models.CharField(blank=True, max_length=200, null=True)),
                ('condition_onreturn', models.CharField(blank=True, max_length=200, null=True)),
                ('date_taken', models.DateField(auto_now_add=True, null=True)),
                ('date_returned', models.DateField(auto_now_add=True, null=True)),
                ('employee', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name_plural': 'AssignTools',
                'db_table': 'AssignTools',
                'verbose_name': 'AssignTools',
            },
        ),
        migrations.CreateModel(
            name='CameraDetail',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=20)),
                ('model', models.CharField(max_length=20, null=True)),
                ('p_serial_number', models.CharField(max_length=20, null=True)),
                ('date_added', models.DateField(auto_now=True, null=True)),
                ('status', models.CharField(choices=[('Good', 'Good'), ('Fair', 'Fair'), ('Bad', 'Bad')], max_length=200)),
            ],
            options={
                'verbose_name_plural': 'Cameras',
                'db_table': 'Camera',
                'verbose_name': 'Camera',
            },
        ),
        migrations.CreateModel(
            name='CameraTypes',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, max_length=200, null=True)),
            ],
            options={
                'verbose_name_plural': 'CameraTypes',
                'db_table': 'CameraTypes',
                'verbose_name': 'CameraType',
            },
        ),
        migrations.CreateModel(
            name='Equipment',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('label', models.CharField(max_length=20)),
                ('equipment_type', models.CharField(blank=True, max_length=20, null=True)),
                ('brand', models.CharField(blank=True, max_length=20, null=True)),
                ('model', models.CharField(blank=True, max_length=20, null=True)),
                ('serial_number', models.CharField(max_length=20, null=True)),
                ('status', models.CharField(choices=[('Good', 'Good'), ('Fair', 'Fair'), ('Bad', 'Bad')], max_length=200)),
                ('date_added', models.DateField(auto_now=True, null=True)),
                ('availability', models.CharField(choices=[('book', 'book'), ('assign', 'assign'), ('free', 'free')], default='free', max_length=200)),
                ('in_use', models.BooleanField(default=False)),
            ],
            options={
                'verbose_name_plural': 'Equipments',
                'db_table': 'Equipment',
                'verbose_name': 'Equipment',
            },
        ),
        migrations.CreateModel(
            name='Project',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, max_length=50, null=True)),
                ('client', models.CharField(blank=True, max_length=100, null=True)),
                ('location', models.CharField(blank=True, max_length=100, null=True)),
                ('producer', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name_plural': 'Projects',
                'db_table': 'Project',
                'verbose_name': 'Project',
            },
        ),
        migrations.AddField(
            model_name='cameradetail',
            name='camera_type',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='psmsapp.CameraTypes'),
        ),
        migrations.AddField(
            model_name='assigntools',
            name='equipments',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='psmsapp.Equipment'),
        ),
    ]
